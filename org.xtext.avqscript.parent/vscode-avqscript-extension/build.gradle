apply plugin: 'com.moowork.node'

def inputFiles = fileTree(
	dir: projectDir, 
	excludes: [ 'out/**', '.gitignore', '.gradle/**', 'build/**', '*.gradle' ]
)

npmInstall {
	inputs.files(inputFiles)
	outputs.dir('out')
}

task npmInstallVsce(type: NpmTask, dependsOn: npmSetup) {
	ext.destPath = "$projectDir/node_modules/vsce" 
	outputs.dir(destPath)
	group 'Node'
	description 'Installs the NodeJS package "Visual Studio Code Extension Manager"'
	args = [ 'install', 'vsce' ]
}

plugins.withType(com.moowork.gradle.node.NodePlugin) {
	node {
		workDir = file("$rootProject.buildDir/nodejs")
		nodeModulesDir = projectDir
	}
}

task vscodeExtension(dependsOn: [npmInstall, npmInstallVsce], type: NodeTask) {
	ext.destDir = new File(buildDir, 'vscode')
	ext.archiveName = "$project.name-${project.version}.vsix"
	ext.destPath = "$destDir/$archiveName"
	inputs.with {
		files inputFiles
		dir npmInstallVsce.destPath
	}
	outputs.dir destDir
	doFirst {
		destDir.mkdirs()
	}
	script = file("$npmInstallVsce.destPath/out/vsce")
	args = [ 'package', '--out', destPath ]
	execOverrides {
		workingDir = projectDir
	}
}
task installExtension(type: Exec, dependsOn: vscodeExtension) {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'code.cmd'
    } else {
        commandLine 'code'
    }
    args '--install-extension', vscodeExtension.destPath
}

task startCode(type:Exec, dependsOn: installExtension) {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'code.cmd'
    } else {
        commandLine 'code'
    }
    args "$rootProject.projectDir/demo/", '--new-window'
}

